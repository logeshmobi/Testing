<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http pattern="/resources" security="none" />
	<http pattern="/resources/**/*" security="none" />
	<http pattern="/resourcesNew" security="none" />
	<http pattern="/resourcesNew/**/*" security="none" />
	<http pattern="/resourcesNew1" security="none" />
	<http pattern="/resourcesNew1/**/*" security="none" />
	<http auto-config="true" use-expressions="true" access-denied-page="/auth/login?error=accessDenied">
		<intercept-url pattern="/resources**" access="permitAll" />
		<intercept-url pattern="/resourcesNew**" access="permitAll" />
		<intercept-url pattern="/resourcesNew1**" access="permitAll" />
		<intercept-url pattern="/favicon.ico" access="permitAll" />
		<intercept-url pattern="/auth/login" access="permitAll" />
		<!-- <intercept-url pattern="/auth/login/error" access="permitAll" /> -->
		<intercept-url pattern="/auth/**" access="permitAll" />
   		<intercept-url pattern="/generate/**" access="permitAll" />   		
   		<intercept-url pattern="/forgotpwd/**" access="permitAll" />
   		<intercept-url pattern="/webApp/**" access="permitAll" />
   		<intercept-url pattern="/webAuthentication/**" access="permitAll" />
   		<intercept-url pattern="/merchants/merchantsweb"  access="permitAll"/>

		<!-- merchant web -->
		
		<intercept-url pattern="/merchant/merchantweb" access="hasRole('BANK_MERCHANT')" />
		<intercept-url pattern="/merchant/merchantweb*" access="hasRole('BANK_MERCHANT')" />
		<intercept-url pattern="/merchant/merchantweb**/*" access="hasRole('BANK_MERCHANT')" />
		<intercept-url pattern="/admin/**" access="hasAnyRole('BANK_MERCHANT')" />
		<!-- merchant web -->
		
		
		<!-- non-merchant web -->
		<intercept-url pattern="/nonmerchant/nonmerchantweb" access="hasRole('NON_MERCHANT')" />
		<intercept-url pattern="/nonmerchant/nonmerchantweb*" access="hasRole('NON_MERCHANT')" />
		<intercept-url pattern="/nonmerchant/nonmerchantweb**/*" access="hasRole('NON_MERCHANT')" />
		<!-- non-merchant web -->
		
		
		<!-- agent web -->
		<intercept-url pattern="/agent/agentweb" access="hasRole('AGENT_USER')" />
		<intercept-url pattern="/agent/agentweb*" access="hasRole('AGENT_USER')" />
		<intercept-url pattern="/agent/agentweb**/*" access="hasRole('AGENT_USER')" />
		<!-- agent web -->
		
		<intercept-url pattern="/admin/**" access="hasAnyRole('BANK_ADMIN','BANK_MERCHANT')" />
		
		<intercept-url pattern="/" access="hasAnyRole('BANK_ADMIN', 'BANK_USER' , 'BANK_MERCHANT' , 'NON_MERCHANT', 'AGENT_USER')" />
		<intercept-url pattern="/*" access="hasAnyRole('BANK_ADMIN', 'BANK_USER' , 'BANK_MERCHANT' , 'NON_MERCHANT', 'AGENT_USER')" />
		<intercept-url pattern="/**/*" access="hasAnyRole('BANK_ADMIN', 'BANK_USER' , 'BANK_MERCHANT' , 'NON_MERCHANT', 'AGENT_USER')" />


		<intercept-url pattern="/bank/user" access="hasAnyRole('BANK_ADMIN', 'BANK_USER')" />
		<intercept-url pattern="/bank/user*" access="hasAnyRole('BANK_ADMIN', 'BANK_USER')" />
		<intercept-url pattern="/bank/user**/*" access="hasAnyRole('BANK_ADMIN', 'BANK_USER')" />
		<intercept-url pattern="/bank/user**/*" access="hasAnyRole('BANK_ADMIN', 'BANK_USER')" />
		
		
		<form-login login-page="/auth/login"  authentication-failure-url="/auth/login/error" username-parameter="username"
			password-parameter="password" authentication-success-handler-ref="authSuccessHandler" />
		
		<logout  invalidate-session="true" logout-success-url="/auth/login"  delete-cookies="JSESSIONID" />
		
		<!-- <logout invalidate-session="false" logout-success-url="/auth/logout" delete-cookies="JSESSIONID"/>
		 -->
		
		<!-- enable csrf protection -->
		<csrf />
		<!-- <session-management session-authentication-error-url="/auth/login?error=invalid" 
		    session-fixation-protection="migrateSession"
		    invalid-session-url="/auth/login?error=invalid"
		    >
			invalid-session-url="/auth/login?error" 
			<concurrency-control max-sessions="1" expired-url="/auth/login?error=expired" />
		</session-management> -->
		<session-management session-authentication-error-url="/auth/login" 
		    session-fixation-protection="migrateSession"
		    invalid-session-url="/auth/login"  >
			<!-- invalid-session-url="/auth/login?error" --> 
			<concurrency-control max-sessions="2" expired-url="/auth/login/expired" />
		</session-management>
	</http>
		
		
<!-- working for new design start here -->

<!--working for new design  end here -->

		<!-- access denied page -->

		<!-- <form-login login-page="/auth/login"  authentication-failure-url="/auth/login/error" username-parameter="username"
			password-parameter="password" authentication-success-handler-ref="authSuccessHandler" />
		<logout invalidate-session="true" logout-success-url="/auth/login"  delete-cookies="JSESSIONID" /> -->
		<!-- enable csrf protection -->
		<!-- <csrf />
		<session-management session-authentication-error-url="/auth/login?error=invalid" session-fixation-protection="migrateSession"> -->
			<!-- invalid-session-url="/auth/login?error" --> 
		<!-- 	<concurrency-control max-sessions="1" expired-url="/auth/login?error=expired" />
		</session-management>
	</http> -->

       
<!-- ADDED by CK -->
	<beans:bean id="authSuccessHandler" class="com.mobiversa.payment.auth.AuthSuccessHandler" />
	
<!-- 	<authentication-manager>
        <authentication-provider ref="customAuthenticationProvider">
        </authentication-provider>
    </authentication-manager>
 
    <beans:bean id="customAuthenticationProvider"
          class="com.mobiversa.payment.service.CustomAuthenticationService">
        <beans:property name="myUserDetailsService" ref="myUserDetailsService" />
        <beans:property name="myUserDetailsService">
            <beans:ref local="myUserDetailsServiceBean"/>
        </beans:property>
    </beans:bean> -->


	<!-- <authentication-manager>
		<authentication-provider user-service-ref="myUserDetailsService">
			<password-encoder ref="passwordEncoder">
			</password-encoder>
		</authentication-provider>
		<authentication-provider user-service-ref="myMerchantDetailsWebService">
			<password-encoder ref="passwordEncoder">
			</password-encoder>
		</authentication-provider>  
		  <authentication-provider user-service-ref="myAgentWebService">
			<password-encoder ref="passwordEncoder">
			</password-encoder>
		</authentication-provider>  
	</authentication-manager> -->
	
	<!-- <beans:bean id="UserDetailsService" class="com.mobiversa.payment.service.MyUserDetailsService">
		<beans:property name="webUserDao" ref="webUserDao" />
	</beans:bean>
	
	<beans:bean id="authenticationProvider"	class="com.mobiversa.auth.LimitLoginAuthenticationProvider">
		<beans:property name="UserDetailsService" ref="UserDetailsService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder"/>
	</beans:bean> -->
	
	<authentication-manager>
	    <authentication-provider ref="authenticationProvider1" />	
	</authentication-manager>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="11" />
	</beans:bean>
</beans:beans>
